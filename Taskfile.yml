# https://taskfile.dev

version: '3'

vars:
  CONTAINER_ENGINE: docker # Can be set to 'podman' as well
  KIND_CONFIG: ./kind-config.yaml

tasks:
  install-docker:
    desc: "Installs Docker using the official Docker repository."
    cmds:
      - |
        echo "Installing Docker..."
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        echo "Docker installed successfully."
        docker --version

        echo "Adding current user (${USER}) to the 'docker' group to avoid permission errors..."
        sudo usermod -aG docker ${USER}
        
        echo ""
        echo "#########################################################################################"
        echo "#"
        echo "#  ACTION REQUIRED: For group changes to apply, you must either:"
        echo "#  1. Log out and log back in."
        echo "#  2. Or run the command: newgrp docker"
        echo "#"
        echo "#########################################################################################"
    preconditions:
      - sh: '[ "{{.CONTAINER_ENGINE}}" = "docker" ]'
        msg: "CONTAINER_ENGINE is not set to docker."
      - sh: "! command -v docker"
        msg: "Docker is already installed."

  install-podman:
    desc: "Installs Podman from the default Ubuntu repositories."
    cmds:
      - |
        echo "Installing Podman..."
        sudo apt-get update
        sudo apt-get install -y podman
        echo "Podman installed successfully."
        podman --version
    preconditions:
      - sh: '[ "{{.CONTAINER_ENGINE}}" = "podman" ]'
        msg: "CONTAINER_ENGINE is not set to podman."
      - sh: "! command -v podman"
        msg: "Podman is already installed."

  install-kind:
    desc: "Installs Kind (Kubernetes in Docker)."
    cmds:
      - |
        echo "Installing Kind..."
        curl -Lo ./kind "https://kind.sigs.k8s.io/dl/v0.20.0/kind-$(uname)-amd64"
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        echo "Kind installed successfully."
        kind --version
    preconditions:
      - sh: "! command -v kind"
        msg: "Kind is already installed."

  install-kubectl:
    desc: "Installs kubectl, the Kubernetes command-line tool."
    cmds:
      - |
        echo "Installing kubectl..."
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        rm kubectl
        echo "kubectl installed successfully."
        kubectl version --client
    preconditions:
      - sh: "! command -v kubectl"
        msg: "kubectl is already installed."

  setup-kube:
    desc: "Sets up the complete Kubernetes environment based on the specified CONTAINER_ENGINE."
    deps:
      - task: install-{{.CONTAINER_ENGINE}}
      - task: install-kind
      - task: install-kubectl
    cmds:
      - echo "Kubernetes setup complete with {{.CONTAINER_ENGINE}}, Kind, and kubectl."

  cluster-up:
    desc: "Creates a Kind cluster using the local kind-config.yaml file."
    cmds:
      - kind create cluster --config {{.KIND_CONFIG}}
    preconditions:
      - sh: '[ -f {{.KIND_CONFIG}} ]'
        msg: "The Kind config file is missing. Please ensure '{{.KIND_CONFIG}}' exists."
      - sh: '!(kind get clusters | grep -q "^kind$")'
        msg: "A Kind cluster named 'kind' already exists. Use 'task cluster-down' to delete it first."

  cluster-down:
    desc: "Deletes the local Kind cluster."
    cmds:
      - kind delete cluster
    preconditions:
      - sh: '(kind get clusters | grep -q "^kind$")'
        msg: "No Kind cluster named 'kind' was found."

  default:
    desc: "Shows usage information."
    silent: true
    cmds:
      - |
        echo "Usage: task [command]"
        echo ""
        echo "Commands:"
        echo "  setup-kube:      Installs the specified container engine, Kind, and kubectl."
        echo "  cluster-up:      Creates a Kind cluster using the local config file."
        echo "  cluster-down:    Deletes the local Kind cluster."
        echo ""
        echo "Individual Installers:"
        echo "  install-docker:  Installs Docker."
        echo "  install-podman:  Installs Podman."
        echo "  install-kind:    Installs Kind."
        echo "  install-kubectl: Installs kubectl."